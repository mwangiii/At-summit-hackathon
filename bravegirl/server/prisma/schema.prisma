// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = env("DATABASE_URL")
}

model User {
  id         Int      @id @default(autoincrement())
  username   String
  email      String   @unique
  password   String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  blogs      Blog[]   // Add a relation to represent blogs authored by the user
  donations  Donation[] // Add a relation to represent donations made by the user
  Volunteer  Volunteer?   @relation(fields: [volunteerId], references: [id])
  volunteerId Int?    @unique
}

model Blog {
  id         Int      @id @default(autoincrement())
  title      String
  content    String
  author     User?     @relation(fields: [authorId], references: [id])
  authorId   Int?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model VolunteerOpportunity {
  id          Int      @id @default(autoincrement())
  title       String
  description String
  volunteers  Volunteer[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Volunteer {
  id          Int      @id @default(autoincrement())
  User        User?
  userId      Int?
  name      String
  email     String
  phone     String
  address   String?
  city      String?
  state     String?
  availability String?
  skills     Skill[]      @relation("VolunteerSkills")
  interests  Interest[]   @relation("VolunteerInterests")
  profession String?
  opportunityId Int?
  opportunity   VolunteerOpportunity? @relation(fields: [opportunityId], references: [id])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
 
model Donation {
  id          Int      @id @default(autoincrement())
  amount      Float
  donor       User?    @relation(fields: [donorId], references: [id])
  donorId     Int?
  fullName    String
  email       String
  phone       String
  address     String
  city        String?
  state       String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Skill {
  id          Int          @id @default(autoincrement())
  name String @unique
  volunteers  Volunteer[]  @relation("VolunteerSkills")
}

model Interest {
  id          Int          @id @default(autoincrement())
  name String @unique
  volunteers  Volunteer[]  @relation("VolunteerInterests")
}

